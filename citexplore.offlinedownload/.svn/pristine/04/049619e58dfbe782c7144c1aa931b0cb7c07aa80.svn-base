package citexplore.offlinedownload.downloader;

import java.io.IOException;

import org.apache.logging.log4j.LogManager;
import org.apache.logging.log4j.Logger;
import org.junit.Assert;
import org.junit.Test;

import citexplore.foundation.util.NetUtil;

/**
 * 
 *
 * @author Zhu,Sichuang
 */
public class SpringerPdfUrlRedirectorTest {

	// **************** 公开变量

	// **************** 私有变量

	/**
	 * Log4j logger。
	 */
	private static Logger logger = LogManager
			.getLogger(SpringerPdfUrlRedirectorTest.class);

	// **************** 继承方法

	// **************** 公开方法

	/**
	 * 测试redirect函数。
	 */
	@Test
	public void testRedirect() {
		SpringerPdfUrlRedirector springerPdfUrlRedirector = new SpringerPdfUrlRedirector();

		try {

			UrlRedirection urlRedirection = springerPdfUrlRedirector
					.redirectImpl(
							"http://link.springer.com/chapter/10.1007/3-540-44533-1_114");

			UrlRedirection urlRedirection2 = RedirectionCache.instance.get(
					"http://link.springer.com/chapter/10.1007/3-540-44533-1_114");

			Assert.assertEquals("application/pdf",
					NetUtil.urlConnection(urlRedirection.redirectedUrl)
							.getContentType());
			Assert.assertTrue(urlRedirection.noMoreRedirection);
			Assert.assertEquals(urlRedirection.redirectedUrl,
					urlRedirection2.redirectedUrl);
			Assert.assertTrue(urlRedirection2.noMoreRedirection);

			urlRedirection = springerPdfUrlRedirector.redirectImpl(
					"http://link.springer.com/article/10.1023/A%3A1002893125231");

			urlRedirection2 = RedirectionCache.instance.get(
					"http://link.springer.com/article/10.1023/A%3A1002893125231");

			Assert.assertEquals("application/pdf",
					NetUtil.urlConnection(urlRedirection.redirectedUrl)
							.getContentType());
			Assert.assertTrue(urlRedirection.noMoreRedirection);
			Assert.assertEquals(urlRedirection.redirectedUrl,
					urlRedirection2.redirectedUrl);
			Assert.assertTrue(urlRedirection2.noMoreRedirection);

			urlRedirection = springerPdfUrlRedirector.redirectImpl(
					"http://link.springer.com/referenceworkentry/10.1007/978-1-4020-5614-7_1809");

			urlRedirection2 = RedirectionCache.instance.get(
					"http://link.springer.com/referenceworkentry/10.1007/978-1-4020-5614-7_1809");

			Assert.assertEquals("application/pdf",
					NetUtil.urlConnection(urlRedirection.redirectedUrl)
							.getContentType());
			Assert.assertTrue(urlRedirection.noMoreRedirection);
			Assert.assertEquals(urlRedirection.redirectedUrl,
					urlRedirection2.redirectedUrl);
			Assert.assertTrue(urlRedirection2.noMoreRedirection);

			urlRedirection = springerPdfUrlRedirector.redirectImpl(
					"http://link.springer.com/book/10.1007/978-1-4419-7716-8");

			urlRedirection2 = RedirectionCache.instance.get(
					"http://link.springer.com/book/10.1007/978-1-4419-7716-8");

			Assert.assertEquals("application/pdf",
					NetUtil.urlConnection(urlRedirection.redirectedUrl)
							.getContentType());
			Assert.assertTrue(urlRedirection.noMoreRedirection);
			Assert.assertEquals(urlRedirection.redirectedUrl,
					urlRedirection2.redirectedUrl);
			Assert.assertTrue(urlRedirection2.noMoreRedirection);
		} catch (IOException e) {
			logger.error(e.getMessage(), e);
			throw new RuntimeException(e);
		}

	}
	// **************** 私有方法

}
